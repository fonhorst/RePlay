image: replay/ci-image:0.0.2

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == "schedule"

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

.setup_venv: &setup_venv
  - python -m venv venv
  - source ./venv/bin/activate
  - pip install -q --upgrade pip wheel poetry==1.3.2 lightfm

.install_replay: &install_replay
  before_script:
    - *setup_venv
    - poetry install

cache: &global_cache
  key: ${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}
  paths:
    - ./venv/
    - .cache/pip
  policy: pull

stages:
  - resolve
  - code_quality
  - test

resolve-job:
  stage: resolve
  cache:
    <<: *global_cache
    policy: push
  script:
    - *setup_venv
    - poetry --version
    - pip --version
    - poetry lock
    - poetry install
    - dependencies="${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}_dependencies.txt"
    - dependencies=$(echo ${dependencies} | sed -e 's/[^0-9a-zA-Z.-]/_/g') # removed invalid characters
    - pip list > ${dependencies}
  artifacts:
    paths:
      - poetry.lock
      - ${dependencies}
    expire_in: 2 week

pylint-job:
  <<: *install_replay
  stage: code_quality
  script:
    - pylint --rcfile=.pylintrc replay

pycodestyle-job:
  <<: *install_replay
  stage: code_quality
  script:
    - pycodestyle --ignore=E203,E231,E501,W503,W605 --max-doc-length=160 replay tests

sphinx-job:
  <<: *install_replay
  stage: code_quality
  script:
    - cd docs
    - make clean html

test-job:
  <<: *install_replay
  stage: test
  script:
    - pytest --cov=replay --cov-report=term-missing --doctest-modules replay --cov-fail-under=93 tests
