image: replay/ci-image:0.0.1

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == "schedule"

.job_template: &job_configuration
  before_script:
    - poetry config virtualenvs.in-project true
    - poetry install
    - source .venv/bin/activate

cache:
  key: $CI_COMMIT_REF_NAME
  paths:
    - ./venv/
  policy: pull

stages:
  - resolve
  - code_quality
  - test

resolve-job:
  stage: resolve
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - ./venv/
    policy: pull-push
  script:
    - poetry config virtualenvs.in-project true
    - poetry lock
    - poetry install
  artifacts:
    paths:
      - poetry.lock
    expire_in: 2 week

pylint-job:
  <<: *job_configuration
  stage: code_quality
  script:
    - pylint --rcfile=.pylintrc replay

pycodestyle-job:
  <<: *job_configuration
  stage: code_quality
  script:
    - pycodestyle --ignore=E203,E231,E501,W503,W605 --max-doc-length=160 replay tests

sphinx-job:
  <<: *job_configuration
  stage: code_quality
  script:
    - cd docs
    - make clean html

test-job:
  <<: *job_configuration
  stage: test
  script:
    - pytest --cov=replay --cov-report=term-missing --doctest-modules replay --cov-fail-under=93 tests
